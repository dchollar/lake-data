plugins {
    id 'base'
    id 'war'
    id 'groovy'
    id 'idea'
    id 'jvm-test-suite'
    id 'org.springframework.boot' version '3.4.1'
}

apply plugin: 'io.spring.dependency-management'

java {
    sourceCompatibility(JavaVersion.VERSION_21)
    targetCompatibility(JavaVersion.VERSION_21)
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

springBoot {
    buildInfo()
}

configurations.configureEach {
    exclude group: 'commons-logging', module: 'commons-logging'
}

ext {
    OPENAPI_VERSION = '2.8.3'
    POI_VERSION = '5.3.0'
    SPOCK_VERSION = '2.4-M4-groovy-4.0'
}

dependencies {
    implementation('org.apache.groovy:groovy-all:4.0.24')

    implementation('org.apache.commons:commons-lang3:3.17.0')
    implementation('commons-io:commons-io:2.18.0')
    implementation('org.apache.pdfbox:pdfbox:3.0.3')
    implementation('net.sourceforge.tess4j:tess4j:5.13.0')
    implementation("org.apache.poi:poi:${POI_VERSION}")
    implementation("org.apache.poi:poi-ooxml:${POI_VERSION}")
    implementation('org.jsoup:jsoup:1.18.3')

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.thymeleaf.extras:thymeleaf-extras-springsecurity6')

    implementation('org.hibernate.orm:hibernate-spatial:6.6.4.Final')
    implementation('org.hibernate.validator:hibernate-validator:8.0.2.Final')

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:${OPENAPI_VERSION}")
    implementation("org.springdoc:springdoc-openapi-starter-common:${OPENAPI_VERSION}")
    implementation('com.mysql:mysql-connector-j:9.1.0')
    implementation('org.yaml:snakeyaml:2.3')

    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation("org.spockframework:spock-core:${SPOCK_VERSION}")
    testImplementation("org.spockframework:spock-spring:${SPOCK_VERSION}")
}

tasks.named('test') {
    useJUnitPlatform()
}
